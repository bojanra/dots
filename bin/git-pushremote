#!/bin/bash

# Find which is your current branch
if currentBranch=$(git symbolic-ref --short -q HEAD)
then
  echo "[1;32mOn branch [1;33m$currentBranch[0m"
  echo "[1;32mPushing updates from the current branch to remote branch [0m$currentBranch"

  # Stash current changes
  git stash

  # If remote branch exist, rebase the changes.
  remoteOrigin=$(git config --get remote.origin.url)
  echo "Remote is [0m$remoteOrigin"

  if [ $(git ls-remote --heads $remoteOrigin $currentBranch + | wc -l) == "1" ]
  then
    echo "[1;32mRemote branch exits. Pull changes from remote before pushing the changes.[0m"
    git pull --rebase origin $currentBranch
  else
    echo "[1;32mRemote branch doesn not exists. Push current changes to remote.[0m"
  fi

  # Push the changes to remote branch with current name
  # If specified a param, check if it was -f to force push.
  if [ -z "$1" ]
  then
    echo "[1;32mNo argument supplied. Continue executing the script normally.[0m"
    git push origin $currentBranch
  elif [ $1 == "-f" ] || [ $1 == "--force" ]
  then
    echo "[1;32mForce push requested.[0m"
    git push -f origin $currentBranch
  else
    echo "[1;31mERROR: Not a valid argument. Exiting.[0m"
    exit 1
  fi

  # Apply the stashed changes
  git stash pop

  echo "[1;32mSuccessfully pushed the updates to remote![0m"
else
  echo "[1;31mERROR: Cannot find the current branch![0m"
fi
